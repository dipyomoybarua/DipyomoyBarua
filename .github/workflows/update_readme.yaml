name: Update README with Repo Stats

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # Run every hour

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Calculate Total Repo Size and Stats
        id: repo_stats
        run: |
          total_size=0
          stars=0
          forks=0

          # Fetch all repositories
          repos_response=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" "https://api.github.com/users/DipyomoyBarua/repos?per_page=100")
          echo "Repositories response: $repos_response" # Debugging: Print the response

          # Check if the response contains error message
          if echo "$repos_response" | grep -q "Bad credentials"; then
            echo "Invalid token or no access. Check your PERSONAL_ACCESS_TOKEN secret."
            exit 1
          fi

          repos=$(echo "$repos_response" | jq -r '.[] | .full_name')

          # Check if repos is empty
          if [ -z "$repos" ]; then
            echo "No repositories found or error fetching repositories."
            exit 1
          fi

          # Iterate through each repository
          for repo in $repos; do
            repo_response=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" "https://api.github.com/repos/$repo")
            echo "Repository response for $repo: $repo_response" # Debugging: Print the response

            repo_size=$(echo "$repo_response" | jq -r '.size')
            repo_stars=$(echo "$repo_response" | jq -r '.stargazers_count')
            repo_forks=$(echo "$repo_response" | jq -r '.forks_count')

            # Check if any values are null or empty
            if [ -z "$repo_size" ]; then repo_size=0; fi
            if [ -z "$repo_stars" ]; then repo_stars=0; fi
            if [ -z "$repo_forks" ]; then repo_forks=0; fi

            total_size=$((total_size + repo_size))
            stars=$((stars + repo_stars))
            forks=$((forks + repo_forks))
          done

          last_commit=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          # Set the output variables
          echo "::set-output name=total_size::$((total_size / 1024))" # Convert to MB
          echo "::set-output name=stars::$stars"
          echo "::set-output name=forks::$forks"
          echo "::set-output name=last_commit::$last_commit"

        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Update README
        run: |
          sed -i "s/Total Repo Size:.*/Total Repo Size: ${{ steps.repo_stats.outputs.total_size }} MB/" README.md
          sed -i "s/Last Commit:.*/Last Commit: ${{ steps.repo_stats.outputs.last_commit }}/" README.md
          sed -i "s/Stars:.*/Stars: ${{ steps.repo_stats.outputs.stars }}/" README.md
          sed -i "s/Forks:.*/Forks: ${{ steps.repo_stats.outputs.forks }}/" README.md

          - name: Commit and Push Changes
          run: |
            git config --global user.name 'GitHub Action'
            git config --global user.email 'action@github.com'
            git add README.md
            git commit -m "Update README with latest repo stats" || echo "No changes to commit"
            git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/dipyomoybarua/DipyomoyBarua.git
        